@using parkSmartly.Models
@model List<parkSmartly.Data.Model.AccountStatement>


@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_LayoutMaterialAdmin.cshtml";
    ViewBag.PageName = "account";
    ViewBag.MenuAccountClass = "active";

}

<div class="card ">
    <div class="row">
        <div class="col-md-12">
            
            <div class="card-head">
                <header>Account Statement</header>
            </div>
            <!--end .card-head -->
            <div class="card-body">

                <div class="row">
                    <div class="col-md-12">

                        <strong>Current Balance: <font color="green">@ViewBag.CurrentBalance.ToString("c2")</font></strong>

                        <div class="pull-right">
                            <!--<button class="btn btn-primary" id="btnAddCredit">Add Credit</button>-->
                            <button class="btn btn-primary" id="btnWithdraw">Withdraw</button>
                        </div>
                    </div><!-- /.form-container -->
                </div>
                <div id="contact" class="form-container">
                    <fieldset>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Description</th>
                                    <th>Credit</th>
                                    <th>Debit</th>
                                    <th>Balance</th>
                                </tr>
                                @foreach (var statement in Model.OrderByDescending(n => n.Id))
                                {
                                    <tr>
                                        <td>@statement.TransactionDate.ToString("MMM dd yyyy hh:mm tt")</td>
                                        <td>@statement.Description</td>
                                        <td>@statement.Credit.ToString("c2")</td>
                                        <td>@statement.Debit.ToString("c2")</td>
                                        <td>@statement.CurrentBalance.ToString("c2")</td>
                                    </tr>
                                }
                            </thead>
                        </table>
                    </fieldset>
                </div>
            </div>
        </div>
    </div>
</div>



                <div class="modal fade" id="pnlWithdraw">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <h4 class="modal-title">Withdraw</h4>
                            </div>
                            <div class="modal-body">
                                <div class="col-lg-12">
                                    <div class="alert alert-danger" role="alert" id="error" style="display:none;"></div>
                                    <div class="alert alert-warning" role="alert" id="error" style="display:none;">Oopps something went wrong..</div>
                                    <div class="alert alert-success" role="alert" id="success" style="display:none;">Successfully withdrawn. It might take 1-3 days to reflect to your account.</div>
                                </div>
                                <form>
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">Amount</label>
                                        <input type="email" class="form-control" id="txtAmount" placeholder="Amount to withdaw">
                                    </div>
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">Account Number</label>
                                        <input type="email" class="form-control" id="txtAccount" placeholder="Account number to credit">
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary" id="btnActualWithdraw">Withdraw</button>
                                <button type="button" class="btn btn-primary" id="btnClose" style="display:none;">Close</button>
                            </div>
                        </div><!-- /.modal-content -->
                    </div><!-- /.modal-dialog -->
                </div><!-- /.modal -->

                <form id="__AjaxAntiForgeryForm" action="#" method="post">@Html.AntiForgeryToken()</form>

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")

                    <script type="text/javascript">
                        $("#btnWithdraw").click(function(){
                            $("#pnlWithdraw").modal('show');
                        });

                        $("#btnClose").click(function () {
                            document.location.href = '@Url.Action("Account","Account")';
                        });

                        var currentBalance = @ViewBag.CurrentBalance;

                        $("#btnActualWithdraw").click(function () {
                            if (!/^\s*$/.test($("#txtAmount").val()) && !/^\s*$/.test($("#txtAccount").val()) && !isNaN($("#txtAmount").val())) {
                                if (Number($("#txtAmount").val()) < 10) {
                                    $(".alert-danger").html("Minimum withdrawable amount is $10.");
                                    $(".alert-danger").slideDown("slow");
                                }
                                else {
                                    if (Number($("#txtAmount").val()) > currentBalance){
                                        $(".alert-danger").html("The withdrawble amount cannot be higher than the current balance.");
                                        $(".alert-danger").slideDown("slow");
                                    }
                                    else{
                                        data = {
                                            AmountToWithdraw: $("#txtAmount").val(),
                                            AccountNumber: $("#txtAccount").val()
                                        };
                                        $.ajax({
                                            url: '@Url.Action("Withdraw", "Withdraw")',
                                            data: data,
                                            dataType: 'json',
                                            method: 'POST',
                                            success: function (result) {
                                                $(".alert-success").slideDown("slow");
                                                $(".alert-warning").hide();
                                                $("#btnActualWithdraw").hide();
                                                $("#btnClose").show();
                                            },
                                            error: function (xhr, error, errorThrown) {
                                                $(".alert-success").hide();
                                                $(".alert-warning").slideDown("slow");
                                            }
                                        });
                                    }
                                }
                            }
                            else {
                                $(".alert-danger").html("Please fill-in the correct amount and account number.");
                                $(".alert-danger").slideDown('slow');
                            }
                        });
                    </script>
                }
